<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Common"
    targetNamespace="http://SattelliteCom/Schemas/Common.xsd"
    elementFormDefault="qualified"
    xmlns="http://SattelliteCom/Schemas/Common.xsd"
    xmlns:mstns="http://SattelliteCom/Schemas/Common.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:c="http://SattelliteCom/Schemas/Common.xsd"
>
  <!-- Common simple types -->
  <xs:simpleType name="GUID">
    <xs:annotation>
      <xs:documentation>
        Defines valid GUID 
      </xs:documentation>
    </xs:annotation>
    
    <xs:restriction base="xs:string">
      <xs:pattern value="^(([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12})$"></xs:pattern>
      <xs:length value="36"></xs:length>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TwoPartVersion">
    <xs:annotation>
      <xs:documentation>
        Defines version string containing 2 parts: major.minor
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:pattern value="^(([0-9])+\.([0-9])+)$"></xs:pattern>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="FourPartVersion">
    <xs:annotation>
      <xs:documentation>
        Defines version string containing 2 parts: major.minor
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:pattern value="^(([0-9])+\.([0-9])+\.([0-9])+\.([0-9])+)$"></xs:pattern>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:simpleType name="NonEmptyString">
    <xs:annotation>
      <xs:documentation>
        Defines non-empty string
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:minLength value="1"></xs:minLength>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="AccessLevel">
    <xs:annotation>
      <xs:documentation>
        Defines the Access Levels
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:enumeration value="guest"></xs:enumeration>
      <xs:enumeration value="user"></xs:enumeration>
      <xs:enumeration value="operator"></xs:enumeration>
      <xs:enumeration value="admin"></xs:enumeration>
      <xs:enumeration value="supervisor"></xs:enumeration>
      <xs:enumeration value="tech"></xs:enumeration>
      <xs:enumeration value="read-only"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="UIAccessLevel">
    <xs:annotation>
      <xs:documentation>
        Defines the UI Access Levels
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:enumeration value="normal"></xs:enumeration>
      <xs:enumeration value="tech"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ClauseOperand">
    <xs:annotation>
      <xs:documentation>
        Defines the operands for condition clause
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:enumeration value="equal"></xs:enumeration>
      <xs:enumeration value="notEqual"></xs:enumeration>
      <xs:enumeration value="less"></xs:enumeration>
      <xs:enumeration value="lessOrEqual"></xs:enumeration>
      <xs:enumeration value="greater"></xs:enumeration>
      <xs:enumeration value="greaterEqual"></xs:enumeration>
      <xs:enumeration value="isEmpty"></xs:enumeration>
      <!--<xs:enumeration value="range"></xs:enumeration>-->
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ClauseLogicalOperand">
    <xs:annotation>
      <xs:documentation>
        Defines the logical operands between clauses of condition
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:enumeration value="and"></xs:enumeration>
      <xs:enumeration value="or"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Severity">
    <xs:annotation>
      <xs:documentation>
        Defines the severities
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:enumeration value="information"></xs:enumeration>
      <xs:enumeration value="normal"></xs:enumeration>
      <xs:enumeration value="warning"></xs:enumeration>
      <xs:enumeration value="minor"></xs:enumeration>
      <xs:enumeration value="major"></xs:enumeration>
      <xs:enumeration value="critical"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <!-- Common complex types -->
  
  <xs:complexType name="UniqueItem" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifes the base type for elements which has unique ID (UID)
      </xs:documentation>
    </xs:annotation>

    <xs:attribute ref="UID" use="required"></xs:attribute>
    <xs:attribute ref="Name" use="required"></xs:attribute>
  </xs:complexType>

  <!-- Common attributes -->
  <xs:attribute name="UID" type="GUID">
    <xs:annotation>
      <xs:documentation>
        Specifies unique ID. Based on GUID
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>

  <xs:attribute name="Name" type="NonEmptyString">
    <xs:annotation>
      <xs:documentation>
        Specifies name of item
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>

  <xs:attribute name="Schema" type="TwoPartVersion">
    <xs:annotation>
      <xs:documentation>
        Specifies the version of schema
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>

  <xs:attribute name="Component" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Specifies the component type, example: HSP II, DPS II, RMON
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>

  <!-- Common elements -->
  <xs:element name="Description" type="xs:string">
    <xs:annotation>
      <xs:documentation>
        Specifies the textual description
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="LinkBase" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifes the base type for links between components
      </xs:documentation>
    </xs:annotation>

    <xs:attribute ref="Component" use="required"></xs:attribute>
    <xs:attribute name="Version" type="TwoPartVersion" use="required"></xs:attribute>
    <xs:attribute name="Merge" type="xs:boolean"  default="false"></xs:attribute>
    <xs:attribute name="LinkTelemetries" type="xs:boolean"  default="true"></xs:attribute>
  </xs:complexType>

  <xs:element name="SingletonLink">
    <xs:annotation>
      <xs:documentation>
        Specifies the "Singleton" link - link to component which configuration need to be appended to current component configuration
      </xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="LinkBase"></xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="PrototypeLink">
    <xs:annotation>
      <xs:documentation>
        Specifies the "Prototype" link - link to component which is implemented by current component too
      </xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="LinkBase"></xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <xs:element name="Links">
    <xs:annotation>
      <xs:documentation>
        Specifies the links
      </xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:sequence>
        <xs:element ref="PrototypeLink" minOccurs="0" maxOccurs="unbounded"></xs:element>
        <xs:element ref="SingletonLink" minOccurs="0" maxOccurs="unbounded"></xs:element>
      </xs:sequence>
    </xs:complexType>

	  <!-- Validators -->
    <xs:unique name="ComponentLinkUniqueness">
      <xs:selector xpath="*"></xs:selector>
      <xs:field xpath="@c:Component"></xs:field>
    </xs:unique>
  </xs:element>

	
	<xs:complexType name="UniqueLink">
    <xs:annotation>
      <xs:documentation>
        Specifes the uniqie link
      </xs:documentation>
    </xs:annotation>
		<xs:complexContent>
			<xs:extension base="UniqueItem">
				<xs:attribute ref="Component" use="required"></xs:attribute>
				<xs:attribute name="Version" type="TwoPartVersion" use="required"></xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

  <xs:element type="UniqueLink" name="UniqueLink"></xs:element>
  
  <xs:complexType name="CollectionUniqueLink">
    <xs:complexContent>
      <xs:extension base="UniqueLink"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="CapabilityLevel">
    <xs:annotation>
      <xs:documentation>
        Defines the capability levels
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:enumeration value="global"></xs:enumeration>
      <xs:enumeration value="folder"></xs:enumeration>
      <xs:enumeration value="element"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>


  <xs:complexType name="CapabilityClause">
    <xs:attribute name="Path" type="CapabilityPath" use="required"></xs:attribute>
    <xs:attribute name="Level" type="CapabilityLevel" use="required"></xs:attribute>
  </xs:complexType>
  
  <xs:element name="ClauseLeft">
    <xs:annotation>
      <xs:documentation>
        Specifies the left part of clause
      </xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="UID" type="c:GUID">
          <xs:annotation>
            <xs:documentation>
              Specifies the UID of item
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Capability" type="CapabilityClause"></xs:element>
        <!-- FOR FUTURE USE - add more options here -->
      </xs:choice>
    </xs:complexType>

  </xs:element>

  <xs:simpleType name="CapabilityPath">
    <xs:annotation>
      <xs:documentation>
        Defines a valid capability Path
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:pattern value="^[1-9][0-9]*(\.[0-9]*)*$"></xs:pattern>
    </xs:restriction>
  </xs:simpleType>  
  
  <xs:element name="ClauseRight">
    <xs:annotation>
      <xs:documentation>
        Specifies the right part of clause
      </xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="UID" type="c:GUID">
          <xs:annotation>
            <xs:documentation>
              Specifies the UID of item
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Absolute" type="xs:string">
          <xs:annotation>
            <xs:documentation>
              Specifies the absolute value
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <!-- FOR FUTURE USE - add more options here -->
      </xs:choice>
    </xs:complexType>

  </xs:element>

  <xs:element name="Clause">
    <xs:annotation>
      <xs:documentation>
        Specifies the condition clause
      </xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ClauseLeft" minOccurs="1" maxOccurs="1"></xs:element>
        <xs:element name="Operand" type="ClauseOperand" minOccurs="1" maxOccurs="1"></xs:element>
        <xs:element ref="ClauseRight" minOccurs="1" maxOccurs="1"></xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="ClauseGroup">
    <xs:complexType>
      <xs:sequence>
        <xs:choice minOccurs="1" maxOccurs="unbounded">
          <xs:element ref="Clause"></xs:element>
          <xs:element ref="c:ClauseGroup"></xs:element>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="Operand" type="ClauseLogicalOperand" default="or"></xs:attribute>
    </xs:complexType>
  </xs:element>

  <xs:element name="Condition">
    <xs:annotation>
      <xs:documentation>
        Specifies the condition
      </xs:documentation>
    </xs:annotation>

    <xs:complexType>
      <xs:sequence>
        <xs:element ref="c:ClauseGroup" minOccurs="0" maxOccurs="1"></xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="Licenses">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="License" minOccurs="0" maxOccurs="unbounded"></xs:element>
      </xs:sequence>
    </xs:complexType>

  </xs:element>

  <xs:element name="License">
    <xs:complexType>
      <xs:attribute name="Code" type="c:NonEmptyString" use="required"></xs:attribute>
      <xs:attribute name="Description" type="xs:string"></xs:attribute>
      <xs:attribute name="Max" type="xs:int" default="1"></xs:attribute>
      <xs:attribute name="Extent" type="xs:int" default="1"></xs:attribute>
    </xs:complexType>
  </xs:element>  
  
  <!-- Dependencies -->

  <xs:complexType name="Dependency" abstract="true">
    <xs:annotation>
      <xs:documentation>
        Specifies the base of element dependency
      </xs:documentation>
    </xs:annotation>

    <xs:sequence>
      <xs:element ref="Condition" minOccurs="0" maxOccurs="1"></xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="BaseInactiveDependency">
    <xs:annotation>
      <xs:documentation>
        Specifies the inactive dependency - when conditions are true the item is inactive
      </xs:documentation>
    </xs:annotation>    
      <xs:complexContent>
        <xs:extension base="Dependency"></xs:extension>
      </xs:complexContent>    
  </xs:complexType>
  
  <!-- End of dependencies -->  
  
  <xs:simpleType name="ConvertOperation">
    <xs:annotation>
      <xs:documentation>
        Defines the logical operands between clauses of condition
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:enumeration value="multiplication"></xs:enumeration>
      <xs:enumeration value="division"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="Units">
    <xs:annotation>
      <xs:documentation>
        Defines the unit of Param element
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value=""></xs:enumeration>
      <xs:enumeration value="BB segment"></xs:enumeration>
      <xs:enumeration value="COMM buff"></xs:enumeration>
      <xs:enumeration value="MPEG frames"></xs:enumeration>
      <xs:enumeration value="TS"></xs:enumeration>
      <xs:enumeration value="TS/SS"></xs:enumeration>
      <xs:enumeration value="%"></xs:enumeration>
      <xs:enumeration value="PCR32"></xs:enumeration>
      <xs:enumeration value="27MHz ticks"></xs:enumeration>
      <xs:enumeration value="Es/N0 dB"></xs:enumeration>
      <xs:enumeration value="C/N0 dB"></xs:enumeration>

      <!--cm : centimeters-->
      <xs:enumeration value="cm"></xs:enumeration>

      <!--Km : Kilometers-->
      <xs:enumeration value="Km"></xs:enumeration>

      <xs:enumeration value="packets"></xs:enumeration>
      <xs:enumeration value="bursts"></xs:enumeration>
      <xs:enumeration value="symbols"></xs:enumeration>

      <xs:enumeration value="0.1dB"></xs:enumeration>
      <xs:enumeration value="0.01dB"></xs:enumeration>
      
      <xs:enumeration value="dB"></xs:enumeration>
      <xs:enumeration value="0.1dBm/Hz"></xs:enumeration>
      <xs:enumeration value="dBm"></xs:enumeration>
      <xs:enumeration value="degrees"></xs:enumeration>
      <xs:enumeration value="°C"></xs:enumeration>
      <xs:enumeration value="dBm/Hz"></xs:enumeration>

      <xs:enumeration value="hours"></xs:enumeration>
      <xs:enumeration value="minutes"></xs:enumeration>
      <xs:enumeration value="sec"></xs:enumeration>
      <xs:enumeration value="ms"></xs:enumeration>
      <xs:enumeration value="10ms"></xs:enumeration>           
      <xs:enumeration value="µs"></xs:enumeration>

      <xs:enumeration value="Hz"></xs:enumeration>
      <xs:enumeration value="KHz"></xs:enumeration>
      <xs:enumeration value="MHz"></xs:enumeration>
      <xs:enumeration value="GHz"></xs:enumeration>

      <xs:enumeration value="bytes"></xs:enumeration>
      <xs:enumeration value="KB"></xs:enumeration>
      <xs:enumeration value="MB"></xs:enumeration>
      <xs:enumeration value="GB"></xs:enumeration>

      <xs:enumeration value="bps"></xs:enumeration>
      <xs:enumeration value="Kbps"></xs:enumeration>
      <xs:enumeration value="pps"></xs:enumeration>
      <xs:enumeration value="sps"></xs:enumeration>
      <xs:enumeration value="Ksps"></xs:enumeration>
      <xs:enumeration value="ppm"></xs:enumeration>
      <xs:enumeration value="Mbps"></xs:enumeration>

      <xs:enumeration value="mA"></xs:enumeration>
      <xs:enumeration value="W"></xs:enumeration>
      <xs:enumeration value="mW"></xs:enumeration>
      <xs:enumeration value="V"></xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="ValueConverterBase">
    <xs:attribute type="ConvertOperation" name="ConvertOperation" use="required"/>
    <xs:attribute type="xs:double" name="Factor" use="required"></xs:attribute>
    <xs:attribute type="Units" use="optional" name="OverrideUnits"/>
  </xs:complexType>

  <xs:simpleType name="ASN1">
    <xs:annotation>
      <xs:documentation>
        Defines a valid ASN1 name - first char is not a letter
      </xs:documentation>
    </xs:annotation>

    <xs:restriction base="xs:string">
      <xs:pattern value="^[A-z]{1}\w*"></xs:pattern>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Flag">
    <xs:attribute type ="xs:long" name="Value" use="required"></xs:attribute>
  </xs:complexType>   
</xs:schema>
